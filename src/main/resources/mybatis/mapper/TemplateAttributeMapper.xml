<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.TemplateAttributeMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.pojo.TemplateAttribute">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="roleid" jdbcType="INTEGER" property="roleid" />
    <result column="rolename" jdbcType="VARCHAR" property="rolename" />
    <result column="timeout" jdbcType="TINYINT" property="timeout" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="template_id" jdbcType="INTEGER" property="templateId" />
    <result column="nodeCode" jdbcType="INTEGER" property="nodecode" />
    <result column="nodeName" jdbcType="VARCHAR" property="nodename" />
    <result column="url" jdbcType="LONGVARCHAR" property="url" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from template_attribute
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.pojo.TemplateAttribute">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into template_attribute (roleid, rolename, timeout, 
      createtime, updateTime, template_id, 
      nodeCode, `nodeName`, url
      )
    values (#{roleid,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{timeout,jdbcType=TINYINT}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{templateId,jdbcType=INTEGER}, 
      #{nodecode,jdbcType=INTEGER}, #{nodename,jdbcType=VARCHAR}, #{url,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.pojo.TemplateAttribute">
    update template_attribute
    set roleid = #{roleid,jdbcType=INTEGER},
      rolename = #{rolename,jdbcType=VARCHAR},
      timeout = #{timeout,jdbcType=TINYINT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      template_id = #{templateId,jdbcType=INTEGER},
      nodeCode = #{nodecode,jdbcType=INTEGER},
      `nodeName` = #{nodename,jdbcType=VARCHAR},
      url = #{url,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, roleid, rolename, timeout, createtime, updateTime, template_id, nodeCode, 
    `nodeName`, url
    from template_attribute
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, roleid, rolename, timeout, createtime, updateTime, template_id, nodeCode, 
    `nodeName`, url
    from template_attribute
  </select>
</mapper>